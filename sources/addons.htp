.---------------------------------------------------------------------
.-  addons.htp    Add-ons section in htmlpp.org
.-
.-  Written:      21 Sep 1999  Enrique Bengoechea <ebb@imatix.com>
.-  $Id: $
.---------------------------------------------------------------------
.include prelude.def
.include macros.def
.include page.def
.-
.define BASE addons/addon
.define section addons
.--------------------------------------------------------------------
.ignore page
.ignore header
.page $(addons) = Add-ons

<P>Here we collect some add-ons to htmlpp which may be useful to users,
such as scripts to use htmlpp from different text editors.</P>

<P>Any contribution is kindly acknowledged. Please e-mail it to
<.MAILTO "$(webmaster)?subject=Htmlpp add-on">.</P>

.block index_open
<OL>
.block index_entry
<LI>$(*INDEX_PAGE=$(INDEX_TITLE))</LI>
.block index_close
</OL>
.endblock
<OL>
<LI><A href="addon.$(EXT)">JScripts for HomeSite 4.0</A>. <EM>Contributed by Enrique Bengoechea</EM>.
<LI><A href="addon1.$(EXT)">Utilities to use Htmlpp from VIM</A>. <EM>Contributed by Jean Jordaan</EM>.
</OL>
.-
.--------------------------------------------------------------------
.ignore header
.define updated 19991020
.block toc_open
<UL>
.block toc_close
</UL>
.block toc_entry
<LI>$(*TOC_HREF=$(TOC_TITLE))
.endblock
.-
.page JScripts for HomeSite 4.0
.macro FILE <TT>$+</TT>
.endmacro
.define script_name htmlpp_hs
.define version_no 02
.define htmlpp_hs.zip =  "$(script_name)$(version_no).zip"
.define ms_scripting  http://msdn.microsoft.com/scripting/default.htm?/scripting/jscript/default.htm
.define ScriptX       http://www.meadroid.com/scriptx/
.define homesite      http://www.allaire.com/products/homesite/homesite.cfm
.-
.CONTRIBUTED "$(*ebb=Enrique Bengoechea)"
.build toc pages=0
<DIV ALIGN="center">
<.IMG htmlpphs_bar.gif "HomeSite Toolbar for Htmlpp View" border=0 usemap="#toolbar">
</DIV><MAP name="toolbar">
<AREA SHAPE="RECT" COORDS="16,22,38,45" HREF="#htmlpp" TITLE="Run Htmlpp">
<AREA SHAPE="RECT" COORDS="45,22,68,45" HREF="#htmlpp_opprocfiles" TITLE="Open Generated Files">
<AREA SHAPE="RECT" COORDS="69,22,91,45" HREF="#htmlpp_brfile" TITLE="Browse Generated File">
<AREA SHAPE="RECT" COORDS="92,22,114,45" HREF="#htmlpp_opwrk" TITLE="Open Working Files">
<AREA SHAPE="RECT" COORDS="115,22,135,45" HREF="#htmlpp_clall" TITLE="Close Last-Run Files">
<AREA SHAPE="RECT" COORDS="145,22,164,45" HREF="#htmlpp_opinclude" TITLE="Open Included Files">
</MAP>

.H2 Overview

<P>$(*htmlpp=Htmlpp) is a free HTML preprocessor which allows to industrialise
your HTML writting and simplifies site building and maintenance.
Because Htmlpp is a command-line tool, writting and debugging Htmlpp documents can
be a slow task. $(*homesite=HomeSite) is one of the best text-based HTML editor running
under Windows I have found, and provides a customizable rich environment for
writting HTML files.</P>

<P>Here you can find several scripts for HomeSite 4.0 that help you use Htmlpp 4.2b from
within HomeSite, so providing a comfortable graphic environment for running Htmlpp:</P>
<OL>
<LI>The main script opens a dialog that allows you to select Htmlpp options for preprocessing
current document. You can also choose to automatically edit or browse the intermediate
working files and the final HTML files generated by Htmlpp.
<EM><A href="&relpath("$(DIR)/$(PAGE)","$(BASEDIR)/$(img-dir)/htmlpp_hs.gif")">View a Screen Shot of the Dialog</A>.</EM>
<LI>Three scripts allow you to open the generated HTML files, browse the first generated HTML
file, or open the intermediate working files from last run of Htmlpp, respectively.
<LI>A script closes all open files related to the last run of Htmlpp.
<LI>A script opens all .include'd files in current document.
</OL>

.H2 Download and Installation

<P><STRONG>Prerequisites:</STRONG></P>
<UL>
  <LI>The scripts are written in JScript, and require to have installed the
  $(*ms_scripting=Microsoft Scripting Engines 3.01).<BR>
  Note: You should have them installed if you have Internet Explorer 5 or higher. Otherwise,
  you can freely download them from the above link.
  <LI>You need to have installed and working $(*htmlpp=Htmlpp) 4.2b or
  superior.
  Previous versions are likely to work also, but 4.2b new options
  (-charset, -connect, -noconnect, and -expires) won't be recognized.
</UL>

<P><STRONG>Installation:</STRONG></P>
<UL>
  <LI>Download $(*htmlpp_hs.zip=$(script_name)$(version_no).zip)
  (&file_size("$(BASEDIR)/addons/$(script_name)$(version_no).zip",K) Kbs.)
  <LI>Unzip the <.FILE $(script_name)$(version_no).zip> file in a temporal directory.
  <LI>In order to generate the graphic dialogs, the free
  $(*ScriptX=ScriptX) ActiveX control is required. It is provided with the
  scripts. If you haven't installed it previously, just run the supplied
  <.FILE ScriptX.exe> file.
  <LI>From your HomeSite home directory, create the directory &quot;scripts\htmlpp&quot; and
   Copy the files <.FILE *.js, *.html> and <.FILE *.bmp>,
   to it.
  <LI>Copy the file <.FILE htmlpp_hs.pl> to the directory where Htmlpp is installed. You may
   need to customize the path to Htmlpp on it.
  <LI>The scripts assume Htmlpp is installed on 'C:\htmlpp'. If it is not, modify the variable
  'HtmlppPath' in each of the <.FILE .js> files.
  <LI>From within HomeSite you can create a ToolBar and add buttons for each script, or
   run the <.FILE htmlpp_installer.js> script (e.g. by assigning it a button in a toolbar)
   which will create the toolbar with all the buttons.
</UL>

.H2 Behavior of the Scripts

<P>Whenever you run Htmlpp from within Homesite using the main script, it will store
the names of the source file, the generated HTML files, the working files, and the
errors file in file '<.FILE last_process.txt>', which is stored in the same directory
than the scripts. The generated HTML files are obtained by parsing Htmlpp run-time
output.</P>

<P>Storing the info about last run is useful because all other scripts can use it by default
to perform any operation, like 'Open intermediate working files'.</P>

<P>Some of the scripts will work only if the active document has extensions <.FILE .htp> or
<.FILE .def>\. You can modify the scripts to accept different extensions as Htmlpp documents.</P>

.H3 <A name="htmlpp">htmlpp.js (Run Htmlpp)</A>
<P>The script starts by closing all open files related to previous Htmlpp
processing (<.FILE htmlpp.out>, which contains the captured screen output, <.FILE errors.lst>,
and working files <.FILE html0001.wrk, html002.wrk>...). This is useful so as not to confuse
files from different Htmlpp runs. Then Htmlpp will be invoked with the selected options, and its
output captured into file <.FILE htmlpp.out>\. If some error arises, it will prompt to open
the errors file <.FILE errors.lst>\. Working files <.FILE html001.wrk, html002.wrk>, etc. will be
open if you selected it. Also, if you selected to edit or browse the generated HTML files, the script
will parse <.FILE htmlpp.out> and open all generated files it founds. Information about all
files is stored in file <.FILE last_process.txt> in the scripts directory.</P>

<P><STRONG>NOTE:</STRONG> The language option in the dialog just presets the standard variable
LANG from the command line. If several languages are selected, the file will be processed once
for each language presetting LANG accordingly each time. You can customize the script to adapt
it to the languages you use.</P>

.H3 <A name="htmlpp_opprocfiles">htmlpp_opprocfiles.js (Open Generated HTML Files)</A>
<P>If there is only one open documente named <.FILE htmlpp.out>, invoking this script will parse
it and open for editing all generated HTML files. Additionally, if there is selected text in that
file, only that text will be parsed, what allows to selectively open files.</P>

<P>If there is no open <.FILE htmlpp.out> file, the script will search file <.FILE last_process.txt>
and use the information from last run.</P>

.H3 <A name="htmlpp_brfile">htmlpp_brfile.js (Browse First Generated HTML File)</A>
<P>This script behaves exactly as the previous one but opens only the first HTML file found
in the internal browser (because only one document can be shown at a time).</P>

.H3 <A name="htmlpp_opwrk">htmlpp_opwrk.js (Open Working Files)</A>
<P>This script opens all intermediate working files (<.FILE html0001.wrk, html0002.wrk>, etc)
from last run of Htmlpp, provided Htmlpp was executed in debug mode.</P>

.H3 <A name="htmlpp_clall">htmlpp_clall.js (Close All Last-Run Files)</A>
<P>This script closes all files generated by last run of Htmlpp.</P>

.H3 <A name="htmlpp_opinclude">htmlpp_opinclude.js (Open Included Files)</A>
<P>This script parses current Htmlpp document and opens all included files.
If some text is selected when invoking the script, only that text is parsed, allowing for
selectively open included files.</P>

.H2 Scripts History

<UL>
  <LI><STRONG>Version 0.2</STRONG> released &date("d mmmm yyyy",19990313).
  <UL>
    <LI>Info about last Htmlpp run is stored, so that all scripts refer to that
      info by default.
    <LI>The scripts now correctly handle relative paths of type './doc.htm'.
    <LI>New scripts added: Browse first generated file, Open working files,
      Close all files related last run of Htmlpp, and Open included files.
    <LI>Corrected bug: -set and -page options were not working.
  </UL>
  <LI><STRONG>Version 0.1</STRONG> written &date("d mmmm yyyy",19990311).
</UL>


<MAP NAME="hswebring">
<AREA SHAPE=POLY COORDS="3,4,20,4,26,13,23,13,31,25,27,25,39,45,33,45,11,23,15,23,4,12,9,12,3,4,3,4" HREF="HTTP://www.webring.com/cgi-bin/webring?ring=homesite;list" ALT="Index">
<AREA SHAPE=RECT COORDS="111,16,133,45" HREF="HTTP://www.webring.com/cgi-bin/webring?ring=homesite;id=16;prev" ALT="previous">
<AREA SHAPE=RECT COORDS="134,16,161,45" HREF="HTTP://www.webring.com/cgi-bin/webring?ring=homesite;id=16;random" ALT="random">
<AREA SHAPE=RECT COORDS="161,16,180,45" HREF="HTTP://www.webring.com/cgi-bin/webring?ring=homesite;id=16;next" ALT="next">
<AREA SHAPE=RECT COORDS="0,0,180,50" HREF="HTTP://www.webring.com/cgi-bin/webring?ring=homesite;home" ALT="home">
<AREA SHAPE=default HREF="HTTP://www.webring.com/cgi-bin/webring?ring=homesite;home" ALT="home">
</MAP>
<BR><.IMG hs_webring.gif "HS WebRing links" ' border=0 vspace=4 usemap="#hswebring"'><br>
<SMALL><FONT face="arial,helvetica"><A href="http://hsguide.com/webring/">The unofficial HomeSite WebRing</A> made possible by the <a href="http://www.webring.org/">Webring</A>.</FONT></SMALL>
.endpage
.--------------------------------------------------------------------
.ignore header
.define updated 19991020
.page Utilities to use Htmlpp from VIM
.CONTRIBUTED "Jean Jordaan"

<P>You can download two configuration files for the VIM editor:

<P><STRONG>Htmlpp syntax highlighting</STRONG>: <A href="&relpath("htmlpp.vim")">htmlpp.vim</A>
(&file_size("$(BASEDIR)/addons/htmlpp.vim",K) Kbs.)</P>

<P><DL>
<DT><STRONG>Direct access to anchors</STRONG>: <A href="&relpath("tags.vim")">tags.vim</A>
(&file_size("$(BASEDIR)/addons/tags.vim",K) Kbs.)
<DD>It tags all lines of the form
<PRE>.build anchor whatever[=title]
</PRE>
so that you can jump directly to the line using
<PRE>:ta whate^I
</PRE>
where the ^I indicates a tab, and implies that there's autocompletion
on the anchor names.
</DL>
.endpage

